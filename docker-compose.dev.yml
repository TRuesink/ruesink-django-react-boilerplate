services:
  postgres:
    image: 'postgres:latest'
    hostname: ${POSTGRES_HOST}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '34567:${POSTGRES_PORT}'
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 30s
      retries: 6
  nginx: 
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/development/Dockerfile.dev
    ports:
      - '8794:80'
    volumes:
      - static_volume:/app/backend/django_static
      - ./docker/nginx/development:/etc/nginx/conf.d
    depends_on: 
      - backend
      - frontend
  frontend:
    environment:
      - WDS_SOCKET_PORT=0
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./frontend/src:/app/src
  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile  
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    entrypoint: /app/docker/backend/wsgi-entrypoint.sh
    volumes:
      - static_volume:/app/backend/django_static
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  static_volume: {}